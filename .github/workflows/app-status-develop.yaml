
name: AppStatus - Development

on:
  push:
    branches:
      - develop

jobs:
  app-status-develop:
    runs-on: ubuntu-latest
    environment:
      name: ${{ contains(github.ref, 'develop') && 'development' || 'other' }}
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4.2.2
      - name: AppStatus - Discloud API Action - ${{ vars.ENV_NAME }}
        id: app-status
        uses: marco-quicula/discloud-api-action@develop
        with:
          discloud_api_token: ${{ secrets.DISCLOUD_API_TOKEN }}
          command: 'app-status'

      - name: AppStatus - Check Outputs http_code
        run: |
          if [[ "${{ steps.app-status.outputs.http_code }}" -ne 200 && "${{ steps.app-status.outputs.http_code }}" -ne 404 ]]; then
            echo "[ERROR] http_code is not 200 or 404."
            exit 1
          fi
          echo "[SUCESS] http_code is valid. http_code=${{ steps.userinfo.outputs.http_code }}"
        shell: bash

      - name: AppStatus - Check Outputs response_body
        run: |
          if [ -z "${{ steps.app-status.outputs.response_body }}" ]; then
            echo "[ERROR] response_body is empty."
            exit 1
          fi
          echo "[SUCESS] response_body is not empty."
        shell: bash

      - name: AppStatus - Check Outputs error_message
        run: |
          if [ -n "${{ steps.app-status.outputs.error_message }}" ]; then
            echo "[ERROR] error_message is not empty."
            exit 1
          fi
          echo "[ERROR] error_message is not empty."
        shell: bash

      - name: AppStatus - Check Outputs response_source
        run: |
          if [ "${{ steps.app-status.outputs.response_source }}" != "api" ]; then
            echo "[ERROR] response_source is not 'api'."
            exit 1
          fi
          echo "[SUCESS] response_source is 'api'. response_source=${{ steps.app-status.outputs.response_source }}"
        shell: bash
